#pragma once

#include <memory>
#include "../blockentity/BlockEntity.h"
#include "../util/Brightness.h"

class Level;
class ChunkSource;
class BlockPos;
class BlockID;
class LevelChunk;
class FullBlock;
class HitResult;
class Vec3;
class AABB;
class Material;
class BlockEntity;
class LightLayer;
class ChunkPos;
class Bounds;
class TileTickingQueue;

// Size : 76
class BlockSource
{
public:
	BlockSource(Level &, Dimension &, ChunkSource &, bool, bool);
	virtual ~BlockSource();
	void _fireColumnDirty(int, int, int, int, int);
	void _getSkyDarken();
	void _isIceAt(BlockPos const &);
	void _isWaterAt(BlockPos const &);
	void _neighborChanged(BlockPos const &, BlockPos const &, BlockID);
	void _tileChanged(BlockPos const &, FullBlock, FullBlock, int);
	void addListener(BlockSourceListener &);
	void blockEvent(BlockPos const &, int, int);
	void blockEvent(int, int, int, int, int);
	void canSeeSky(BlockPos const &);
	void canSeeSky(int, int, int);
	void checkIsTopRainBlockPos(BlockPos const &);
	void clearCachedLastChunk();
	void clip(Vec3 const &, Vec3 const &, bool, bool, int);
	void containsAny(BlockPos const &, BlockPos const &);
	void containsAnyLiquid(AABB const &);
	void containsFireBlock(AABB const &);
	void containsLiquid(AABB const &, MaterialType);
	void containsMaterial(AABB const &, MaterialType);
	void fetchAABBs(AABB const &, bool);
	void fetchCollisionShapes(BlockSource &, AABB const &, float *, bool, Entity *);
	void findNextTopSolidBlockUnder(BlockPos &);
	void fireAreaChanged(BlockPos const &, BlockPos const &);
	void fireBlockChanged(BlockPos const &, FullBlock, FullBlock, int);
	void fireBlockEntityChanged(BlockEntity &);
	void fireBlockEntityRemoved(std::unique_ptr<BlockEntity>);
	void fireBlockEvent(int, int, int, int, int);
	void fireBlocksDirty(int, int, int, int, int, int);
	void fireBrightnessChanged(BlockPos const &);
	void getBiome(BlockPos const &);
	void getBlock(BlockPos const &);
	void getBlock(int, int, int);
	void getBlockAndData(BlockPos const &);
	void getBlockAndData(int, int, int);
	void getBlockEntity(BlockPos const &);
	void getBlockEntity(int, int, int);
	void getBlockID(BlockPos const &);
	void getBlockID(int, int, int);
	void getBrightness(BlockPos const &);
	void getBrightness(LightLayer const &, BlockPos const &);
	void getBrightness(LightLayer const &, int, int, int);
	void getBrightness(int, int, int);
	void getChunk(ChunkPos const &);
	void getChunk(int, int);
	void getChunkAt(BlockPos const &);
	void getChunkAt(int, int, int);
	void getChunkSource();
	void getData(BlockPos const &);
	void getData(int, int, int);
	void getDimension();
	void getDimension();
	void getDimensionConst();
	void getDimensionId();
	void getEntities(Entity *, AABB const &);
	void getEntities(EntityType, AABB const &, Entity *);
	void getExtraData(BlockPos const &);
	void getGrassColor(BlockPos const &);
	void getHeightmap(BlockPos const &);
	void getHeightmap(int, int);
	void getHeightmapPos(BlockPos const &);
	void getLevel();
	void getLevel();
	void getLevelConst();
	void getLightColor(BlockPos const &, int);
	void getMaterial(BlockPos const &);
	void getMaterial(int, int, int);
	void getMobsAt(EntityType, BlockPos const &);
	void getNearestEntityNotOfType(Entity *, Vec3 const &, float, EntityType);
	void getNearestEntityOfType(Entity *, AABB const &, EntityType);
	void getNearestEntityOfType(Entity *, Vec3 const &, float, EntityType);
	void getPublicSource();
	void getRawBrightness(BlockPos const &, bool);
	void getRawBrightness(int, int, int, bool);
	void getSeenPercent(Vec3 const &, AABB const &);
	void getTickQueue(BlockPos const &);
	void getTopBlock(int, int &, int);
	void getTopRainBlockPos(BlockPos const &);
	void getTopSolidBlock(BlockPos const &, bool);
	void getTopSolidBlock(int, int, bool);
	void getWritableChunk(ChunkPos const &);
	void hasBlock(BlockPos const &);
	void hasBlock(int, int, int);
	void hasChunksAt(AABB const &);
	void hasChunksAt(BlockPos const &, BlockPos const &);
	void hasChunksAt(BlockPos const &, int);
	void hasChunksAt(Bounds const &);
	void hasChunksAt(int, int, int, int);
	void isConsideredSolidBlock(BlockPos const &);
	void isConsideredSolidBlock(int, int, int);
	void isEmptyBlock(BlockPos const &);
	void isEmptyBlock(int, int, int);
	void isHumidAt(BlockPos const &);
	void isOwnerThread();
	void isPositionUnderLiquid(BlockPos const &, MaterialType);
	void isSnowTemperature(BlockPos const &);
	void isSolidBlockingBlock(BlockPos const &);
	void isSolidBlockingBlock(int, int, int);
	void isTopSolidBlocking(Block *, unsigned char);
	void isTopSolidBlocking(BlockPos const &);
	void isTopSolidBlocking(int, int, int);
	void isUnobstructedByEntities(AABB const &, Entity *);
	void mayPlace(BlockID, BlockPos const &, signed char, Mob *, bool, Entity *);
	void onChunkDiscarded(LevelChunk &);
	void removeBlock(BlockPos const &);
	void removeBlock(int, int, int);
	void removeListener(BlockSourceListener &);
	void runLightUpdates(LightLayer const &, BlockPos const &, BlockPos const &);
	void setBlock(BlockPos const &, BlockID, int);
	void setBlock(int, int, int, BlockID, int);
	void setBlockAndData(BlockPos const &, BlockID, unsigned char, int);
	void setBlockAndData(BlockPos const &, FullBlock, int);
	void setBlockAndData(int, int, int, BlockID, unsigned char, int);
	void setBlockAndData(int, int, int, FullBlock, int);
	void setBlockAndDataNoUpdate(int, int, int, FullBlock);
	void setBlockNoUpdate(int, int, int, BlockID);
	void setBrightness(LightLayer const &, BlockPos const &, Brightness);
	void setBrightness(LightLayer const &, int, int, int, Brightness);
	void setExtraData(BlockPos const &, unsigned short);
	void setGrassColor(int, BlockPos const &, int);
	void setTickingQueue(BlockTickingQueue &);
	void shouldFireEvents(LevelChunk &);
	void shouldFreeze(BlockPos const &, bool);
	void shouldFreezeIgnoreNeighbors(BlockPos const &);
	void shouldThaw(BlockPos const &, bool);
	void updateLightIfOtherThan(LightLayer const &, BlockPos const &, Brightness);
	void updateNeighborsAt(BlockPos const &, BlockID);
};
